import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;import java.net.URL;
import org.apache.commons.compress.utils.IOUtils;import org.apache.hadoop.conf.Configuration;import org.apache.hadoop.fs.FSDataOutputStream;import org.apache.hadoop.fs.FileStatus;import org.apache.hadoop.fs.FileSystem;import org.apache.hadoop.fs.FsUrlStreamHandlerFactory;import org.apache.hadoop.fs.Path;
public class HelloHDFS {
 public static void main(String[] args) throws IOException {  /*URL url = new URL("http://www.baidu.com");  InputStream in  = url.openStream();  IOUtils.copy(in, System.out, 4096);*/  /*====================================*/  URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory());  URL url = new URL("hdfs://192.168.42.100:9000/hello.txt");  InputStream in  = url.openStream();  IOUtils.copy(in, System.out, 4096);  /*====================================*/    Configuration conf = new Configuration();//用来设置很多属性  conf.set("fs.defaultFS", "hdfs://192.168.42.100:9000");  FileSystem filesystem = FileSystem.get(conf);    boolean success = filesystem.mkdirs(new Path("/hello"));  System.out.println("创建目录"+success);    success = filesystem.exists(new Path("/hello.txt"));  System.out.println("文件是否存在"+success);    success = filesystem.delete(new Path("/hello"));  System.out.println("删除目录"+success);    FSDataOutputStream out = filesystem.create(new Path("/hello.java"),true);  FileInputStream localin = new FileInputStream("F:/JavaOperateHadoop/HelloHDFS/src/HelloHDFS.java");  IOUtils.copy(localin, out, 4096);    FSDataOutputStream out2 = filesystem.create(new Path("/hello2.java"),true);  FileInputStream localin2 = new FileInputStream("F:/JavaOperateHadoop/HelloHDFS/src/HelloHDFS.java");  byte[] buf  = new byte[4096];  int len = localin2.read(buf);  while(-1!=len){   out2.write(buf,0,len);   len = localin2.read(buf);  }  localin2.close();  out2.close();    //得到文件的信息  FileStatus[] filestatus = filesystem.listStatus(new Path("/"));  for(FileStatus status:filestatus){   System.out.println(status.getPath());   System.out.println(status.getReplication());   System.out.println(status.getPermission());  }  }}
